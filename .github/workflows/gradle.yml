name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # Docker Image Build
  build-docker-image:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    # 1. Java 17 세팅
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # 2. Spring Boot 애플리케이션 빌드
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
    
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build with Gradle Wrapper
      run: ./gradlew build

    # 3. Docker 이미지 빌드
    - name: docker image build
      run: docker build --platform linux/amd64 -t ${{ secrets.DOCKERHUB_USERNAME }}/yesterpay-image-release .

    # 4. DockerHub 로그인
    - name: docker login
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    # 5. Docker Hub 이미지 푸시
    - name: docker Hub push
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/yesterpay-image-release


  # 위 과정에서 푸시한 이미지를 ec2에서 풀받아서 실행
  run-docker-image-on-ec2:
    needs: build-docker-image
    runs-on: self-hosted

    steps:
    # 6. EC2에서 도커 이미지 pull 하기
    - name: docker pull
      run : sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/yesterpay-image-release

    # 7. 기존에 실행 중이던 컨테이너 중단
    - name: docker stop container
      run: |
        if [ $(sudo docker ps -a -q -f name=yesterpay-image-release) ]; then
          sudo docker stop yesterpay-image-release
        fi

    # 8. 새로운 컨테이너 실행
    - name: docker run new container
      run: sudo docker run -d -p 8080:8080 --name yesterpay-image-release ${{ secrets.DOCKERHUB_USERNAME }}/yesterpay-image-release

    # 9. 이전 도커 이미지 삭제
    - name: delete old docker image
      run: sudo docker system prune -f
